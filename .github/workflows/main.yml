name: Publish Go Binary

# 触发条件：在 push 到 main 分支后
on:
  release:
    types:
    - created
jobs:
  buildAndDeploy:
    runs-on:  ubuntu-latest
    # 交叉构建,多平台交叉编译
    strategy:
      matrix:
        include:
          - goarch: amd64
            goos: linux
          - goarch: amd64
            goos: darwin
          - goarch: arm64
            goos: linux
          - goarch: arm64
            goos: darwin
    # 使用checkout
    steps:
    - uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v3
      with: 
        go-version: '>=1.16.0'
    - run: go version
    - name: make
      run: make
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}            
    - name: Packaging...
      run: tar czf nodeUpgrade-${{ matrix.goos }}-${{ matrix.goarch }}.tgz nodeUpgrade
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GOACTION }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Changes in this Release
          - First Change
          - Second Change
        draft: false
        prerelease: false        
    - name: Uploading assets...
      # if: ${{ !env.ACT }}
      # id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GOACTION }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./nodeUpgrade-${{ matrix.goos }}-${{ matrix.goarch }}.tgz
        asset_name: nodeUpgrade-${{ matrix.goos }}-${{ matrix.goarch }}.tgz
        asset_content_type: application/gzip
